#pragma once

#include "RenderObject.h"
#include "DefaultGeometry/Cube.h"

class StarGate : public RenderObject
{
public:
	StarGate();

private:
	inline static const PosColorVertex s_gateVertices[] =
    {
        { 0.000f, 0.100f, 1.000f, 0xff00a0a0 },
        { 0.000f, 0.100f, 0.850f, 0xff00a0a0 },
        { 0.000f, -0.100f, 1.000f, 0xff00a0a0 },
        { 0.000f, -0.100f, 0.850f, 0xff00a0a0 },
        { 0.174f, 0.100f, 0.985f, 0xff606060 },
        { 0.148f, 0.100f, 0.837f, 0xff606060 },
        { 0.174f, -0.100f, 0.985f, 0xff606060 },
        { 0.148f, -0.100f, 0.837f, 0xff606060 },
        { 0.342f, 0.100f, 0.940f, 0xff606060 },
        { 0.291f, 0.100f, 0.799f, 0xff606060 },
        { 0.342f, -0.100f, 0.940f, 0xff606060 },
        { 0.291f, -0.100f, 0.799f, 0xff606060 },
        { 0.500f, 0.100f, 0.866f, 0xff606060 },
        { 0.425f, 0.100f, 0.736f, 0xff606060 },
        { 0.500f, -0.100f, 0.866f, 0xff606060 },
        { 0.425f, -0.100f, 0.736f, 0xff606060 },
        { 0.643f, 0.100f, 0.766f, 0xff00a0a0 },
        { 0.546f, 0.100f, 0.651f, 0xff00a0a0 },
        { 0.643f, -0.100f, 0.766f, 0xff00a0a0 },
        { 0.546f, -0.100f, 0.651f, 0xff00a0a0 },
        { 0.766f, 0.100f, 0.643f, 0xff606060 },
        { 0.651f, 0.100f, 0.546f, 0xff606060 },
        { 0.766f, -0.100f, 0.643f, 0xff606060 },
        { 0.651f, -0.100f, 0.546f, 0xff606060 },
        { 0.866f, 0.100f, 0.500f, 0xff606060 },
        { 0.736f, 0.100f, 0.425f, 0xff606060 },
        { 0.866f, -0.100f, 0.500f, 0xff606060 },
        { 0.736f, -0.100f, 0.425f, 0xff606060 },
        { 0.940f, 0.100f, 0.342f, 0xff606060 },
        { 0.799f, 0.100f, 0.291f, 0xff606060 },
        { 0.940f, -0.100f, 0.342f, 0xff606060 },
        { 0.799f, -0.100f, 0.291f, 0xff606060 },
        { 0.985f, 0.100f, 0.174f, 0xff00a0a0 },
        { 0.837f, 0.100f, 0.148f, 0xff00a0a0 },
        { 0.985f, -0.100f, 0.174f, 0xff00a0a0 },
        { 0.837f, -0.100f, 0.148f, 0xff00a0a0 },
        { 1.000f, 0.100f, 0.000f, 0xff606060 },
        { 0.850f, 0.100f, 0.000f, 0xff606060 },
        { 1.000f, -0.100f, 0.000f, 0xff606060 },
        { 0.850f, -0.100f, 0.000f, 0xff606060 },
        { 0.985f, 0.100f, -0.174f, 0xff606060 },
        { 0.837f, 0.100f, -0.148f, 0xff606060 },
        { 0.985f, -0.100f, -0.174f, 0xff606060 },
        { 0.837f, -0.100f, -0.148f, 0xff606060 },
        { 0.940f, 0.100f, -0.342f, 0xff606060 },
        { 0.799f, 0.100f, -0.291f, 0xff606060 },
        { 0.940f, -0.100f, -0.342f, 0xff606060 },
        { 0.799f, -0.100f, -0.291f, 0xff606060 },
        { 0.866f, 0.100f, -0.500f, 0xff00a0a0 },
        { 0.736f, 0.100f, -0.425f, 0xff00a0a0 },
        { 0.866f, -0.100f, -0.500f, 0xff00a0a0 },
        { 0.736f, -0.100f, -0.425f, 0xff00a0a0 },
        { 0.766f, 0.100f, -0.643f, 0xff606060 },
        { 0.651f, 0.100f, -0.546f, 0xff606060 },
        { 0.766f, -0.100f, -0.643f, 0xff606060 },
        { 0.651f, -0.100f, -0.546f, 0xff606060 },
        { 0.643f, 0.100f, -0.766f, 0xff606060 },
        { 0.546f, 0.100f, -0.651f, 0xff606060 },
        { 0.643f, -0.100f, -0.766f, 0xff606060 },
        { 0.546f, -0.100f, -0.651f, 0xff606060 },
        { 0.500f, 0.100f, -0.866f, 0xff606060 },
        { 0.425f, 0.100f, -0.736f, 0xff606060 },
        { 0.500f, -0.100f, -0.866f, 0xff606060 },
        { 0.425f, -0.100f, -0.736f, 0xff606060 },
        { 0.342f, 0.100f, -0.940f, 0xff00a0a0 },
        { 0.291f, 0.100f, -0.799f, 0xff00a0a0 },
        { 0.342f, -0.100f, -0.940f, 0xff00a0a0 },
        { 0.291f, -0.100f, -0.799f, 0xff00a0a0 },
        { 0.174f, 0.100f, -0.985f, 0xff606060 },
        { 0.148f, 0.100f, -0.837f, 0xff606060 },
        { 0.174f, -0.100f, -0.985f, 0xff606060 },
        { 0.148f, -0.100f, -0.837f, 0xff606060 },
        { 0.000f, 0.100f, -1.000f, 0xff606060 },
        { 0.000f, 0.100f, -0.850f, 0xff606060 },
        { 0.000f, -0.100f, -1.000f, 0xff606060 },
        { 0.000f, -0.100f, -0.850f, 0xff606060 },
        { -0.174f, 0.100f, -0.985f, 0xff606060 },
        { -0.148f, 0.100f, -0.837f, 0xff606060 },
        { -0.174f, -0.100f, -0.985f, 0xff606060 },
        { -0.148f, -0.100f, -0.837f, 0xff606060 },
        { -0.342f, 0.100f, -0.940f, 0xff00a0a0 },
        { -0.291f, 0.100f, -0.799f, 0xff00a0a0 },
        { -0.342f, -0.100f, -0.940f, 0xff00a0a0 },
        { -0.291f, -0.100f, -0.799f, 0xff00a0a0 },
        { -0.500f, 0.100f, -0.866f, 0xff606060 },
        { -0.425f, 0.100f, -0.736f, 0xff606060 },
        { -0.500f, -0.100f, -0.866f, 0xff606060 },
        { -0.425f, -0.100f, -0.736f, 0xff606060 },
        { -0.643f, 0.100f, -0.766f, 0xff606060 },
        { -0.546f, 0.100f, -0.651f, 0xff606060 },
        { -0.643f, -0.100f, -0.766f, 0xff606060 },
        { -0.546f, -0.100f, -0.651f, 0xff606060 },
        { -0.766f, 0.100f, -0.643f, 0xff606060 },
        { -0.651f, 0.100f, -0.546f, 0xff606060 },
        { -0.766f, -0.100f, -0.643f, 0xff606060 },
        { -0.651f, -0.100f, -0.546f, 0xff606060 },
        { -0.866f, 0.100f, -0.500f, 0xff00a0a0 },
        { -0.736f, 0.100f, -0.425f, 0xff00a0a0 },
        { -0.866f, -0.100f, -0.500f, 0xff00a0a0 },
        { -0.736f, -0.100f, -0.425f, 0xff00a0a0 },
        { -0.940f, 0.100f, -0.342f, 0xff606060 },
        { -0.799f, 0.100f, -0.291f, 0xff606060 },
        { -0.940f, -0.100f, -0.342f, 0xff606060 },
        { -0.799f, -0.100f, -0.291f, 0xff606060 },
        { -0.985f, 0.100f, -0.174f, 0xff606060 },
        { -0.837f, 0.100f, -0.148f, 0xff606060 },
        { -0.985f, -0.100f, -0.174f, 0xff606060 },
        { -0.837f, -0.100f, -0.148f, 0xff606060 },
        { -1.000f, 0.100f, -0.000f, 0xff606060 },
        { -0.850f, 0.100f, -0.000f, 0xff606060 },
        { -1.000f, -0.100f, -0.000f, 0xff606060 },
        { -0.850f, -0.100f, -0.000f, 0xff606060 },
        { -0.985f, 0.100f, 0.174f, 0xff00a0a0 },
        { -0.837f, 0.100f, 0.148f, 0xff00a0a0 },
        { -0.985f, -0.100f, 0.174f, 0xff00a0a0 },
        { -0.837f, -0.100f, 0.148f, 0xff00a0a0 },
        { -0.940f, 0.100f, 0.342f, 0xff606060 },
        { -0.799f, 0.100f, 0.291f, 0xff606060 },
        { -0.940f, -0.100f, 0.342f, 0xff606060 },
        { -0.799f, -0.100f, 0.291f, 0xff606060 },
        { -0.866f, 0.100f, 0.500f, 0xff606060 },
        { -0.736f, 0.100f, 0.425f, 0xff606060 },
        { -0.866f, -0.100f, 0.500f, 0xff606060 },
        { -0.736f, -0.100f, 0.425f, 0xff606060 },
        { -0.766f, 0.100f, 0.643f, 0xff606060 },
        { -0.651f, 0.100f, 0.546f, 0xff606060 },
        { -0.766f, -0.100f, 0.643f, 0xff606060 },
        { -0.651f, -0.100f, 0.546f, 0xff606060 },
        { -0.643f, 0.100f, 0.766f, 0xff00a0a0 },
        { -0.546f, 0.100f, 0.651f, 0xff00a0a0 },
        { -0.643f, -0.100f, 0.766f, 0xff00a0a0 },
        { -0.546f, -0.100f, 0.651f, 0xff00a0a0 },
        { -0.500f, 0.100f, 0.866f, 0xff606060 },
        { -0.425f, 0.100f, 0.736f, 0xff606060 },
        { -0.500f, -0.100f, 0.866f, 0xff606060 },
        { -0.425f, -0.100f, 0.736f, 0xff606060 },
        { -0.342f, 0.100f, 0.940f, 0xff606060 },
        { -0.291f, 0.100f, 0.799f, 0xff606060 },
        { -0.342f, -0.100f, 0.940f, 0xff606060 },
        { -0.291f, -0.100f, 0.799f, 0xff606060 },
        { -0.174f, 0.100f, 0.985f, 0xff606060 },
        { -0.148f, 0.100f, 0.837f, 0xff606060 },
        { -0.174f, -0.100f, 0.985f, 0xff606060 },
        { -0.148f, -0.100f, 0.837f, 0xff606060 },
    };

	inline static const uint16_t s_gateTriList[] =
    {
        0, 4, 1,
        1, 4, 5,
        2, 3, 6,
        3, 7, 6,
        2, 6, 0,
        0, 6, 4,
        3, 1, 7,
        1, 5, 7,
        4, 8, 5,
        5, 8, 9,
        6, 7, 10,
        7, 11, 10,
        6, 10, 4,
        4, 10, 8,
        7, 5, 11,
        5, 9, 11,
        8, 12, 9,
        9, 12, 13,
        10, 11, 14,
        11, 15, 14,
        10, 14, 8,
        8, 14, 12,
        11, 9, 15,
        9, 13, 15,
        12, 16, 13,
        13, 16, 17,
        14, 15, 18,
        15, 19, 18,
        14, 18, 12,
        12, 18, 16,
        15, 13, 19,
        13, 17, 19,
        16, 20, 17,
        17, 20, 21,
        18, 19, 22,
        19, 23, 22,
        18, 22, 16,
        16, 22, 20,
        19, 17, 23,
        17, 21, 23,
        20, 24, 21,
        21, 24, 25,
        22, 23, 26,
        23, 27, 26,
        22, 26, 20,
        20, 26, 24,
        23, 21, 27,
        21, 25, 27,
        24, 28, 25,
        25, 28, 29,
        26, 27, 30,
        27, 31, 30,
        26, 30, 24,
        24, 30, 28,
        27, 25, 31,
        25, 29, 31,
        28, 32, 29,
        29, 32, 33,
        30, 31, 34,
        31, 35, 34,
        30, 34, 28,
        28, 34, 32,
        31, 29, 35,
        29, 33, 35,
        32, 36, 33,
        33, 36, 37,
        34, 35, 38,
        35, 39, 38,
        34, 38, 32,
        32, 38, 36,
        35, 33, 39,
        33, 37, 39,
        36, 40, 37,
        37, 40, 41,
        38, 39, 42,
        39, 43, 42,
        38, 42, 36,
        36, 42, 40,
        39, 37, 43,
        37, 41, 43,
        40, 44, 41,
        41, 44, 45,
        42, 43, 46,
        43, 47, 46,
        42, 46, 40,
        40, 46, 44,
        43, 41, 47,
        41, 45, 47,
        44, 48, 45,
        45, 48, 49,
        46, 47, 50,
        47, 51, 50,
        46, 50, 44,
        44, 50, 48,
        47, 45, 51,
        45, 49, 51,
        48, 52, 49,
        49, 52, 53,
        50, 51, 54,
        51, 55, 54,
        50, 54, 48,
        48, 54, 52,
        51, 49, 55,
        49, 53, 55,
        52, 56, 53,
        53, 56, 57,
        54, 55, 58,
        55, 59, 58,
        54, 58, 52,
        52, 58, 56,
        55, 53, 59,
        53, 57, 59,
        56, 60, 57,
        57, 60, 61,
        58, 59, 62,
        59, 63, 62,
        58, 62, 56,
        56, 62, 60,
        59, 57, 63,
        57, 61, 63,
        60, 64, 61,
        61, 64, 65,
        62, 63, 66,
        63, 67, 66,
        62, 66, 60,
        60, 66, 64,
        63, 61, 67,
        61, 65, 67,
        64, 68, 65,
        65, 68, 69,
        66, 67, 70,
        67, 71, 70,
        66, 70, 64,
        64, 70, 68,
        67, 65, 71,
        65, 69, 71,
        68, 72, 69,
        69, 72, 73,
        70, 71, 74,
        71, 75, 74,
        70, 74, 68,
        68, 74, 72,
        71, 69, 75,
        69, 73, 75,
        72, 76, 73,
        73, 76, 77,
        74, 75, 78,
        75, 79, 78,
        74, 78, 72,
        72, 78, 76,
        75, 73, 79,
        73, 77, 79,
        76, 80, 77,
        77, 80, 81,
        78, 79, 82,
        79, 83, 82,
        78, 82, 76,
        76, 82, 80,
        79, 77, 83,
        77, 81, 83,
        80, 84, 81,
        81, 84, 85,
        82, 83, 86,
        83, 87, 86,
        82, 86, 80,
        80, 86, 84,
        83, 81, 87,
        81, 85, 87,
        84, 88, 85,
        85, 88, 89,
        86, 87, 90,
        87, 91, 90,
        86, 90, 84,
        84, 90, 88,
        87, 85, 91,
        85, 89, 91,
        88, 92, 89,
        89, 92, 93,
        90, 91, 94,
        91, 95, 94,
        90, 94, 88,
        88, 94, 92,
        91, 89, 95,
        89, 93, 95,
        92, 96, 93,
        93, 96, 97,
        94, 95, 98,
        95, 99, 98,
        94, 98, 92,
        92, 98, 96,
        95, 93, 99,
        93, 97, 99,
        96, 100, 97,
        97, 100, 101,
        98, 99, 102,
        99, 103, 102,
        98, 102, 96,
        96, 102, 100,
        99, 97, 103,
        97, 101, 103,
        100, 104, 101,
        101, 104, 105,
        102, 103, 106,
        103, 107, 106,
        102, 106, 100,
        100, 106, 104,
        103, 101, 107,
        101, 105, 107,
        104, 108, 105,
        105, 108, 109,
        106, 107, 110,
        107, 111, 110,
        106, 110, 104,
        104, 110, 108,
        107, 105, 111,
        105, 109, 111,
        108, 112, 109,
        109, 112, 113,
        110, 111, 114,
        111, 115, 114,
        110, 114, 108,
        108, 114, 112,
        111, 109, 115,
        109, 113, 115,
        112, 116, 113,
        113, 116, 117,
        114, 115, 118,
        115, 119, 118,
        114, 118, 112,
        112, 118, 116,
        115, 113, 119,
        113, 117, 119,
        116, 120, 117,
        117, 120, 121,
        118, 119, 122,
        119, 123, 122,
        118, 122, 116,
        116, 122, 120,
        119, 117, 123,
        117, 121, 123,
        120, 124, 121,
        121, 124, 125,
        122, 123, 126,
        123, 127, 126,
        122, 126, 120,
        120, 126, 124,
        123, 121, 127,
        121, 125, 127,
        124, 128, 125,
        125, 128, 129,
        126, 127, 130,
        127, 131, 130,
        126, 130, 124,
        124, 130, 128,
        127, 125, 131,
        125, 129, 131,
        128, 132, 129,
        129, 132, 133,
        130, 131, 134,
        131, 135, 134,
        130, 134, 128,
        128, 134, 132,
        131, 129, 135,
        129, 133, 135,
        132, 136, 133,
        133, 136, 137,
        134, 135, 138,
        135, 139, 138,
        134, 138, 132,
        132, 138, 136,
        135, 133, 139,
        133, 137, 139,
        136, 140, 137,
        137, 140, 141,
        138, 139, 142,
        139, 143, 142,
        138, 142, 136,
        136, 142, 140,
        139, 137, 143,
        137, 141, 143,
        140, 0, 141,
        141, 0, 1,
        142, 143, 2,
        143, 3, 2,
        142, 2, 140,
        140, 2, 0,
        143, 141, 3,
        141, 1, 3,
    };
};

class InnerRing : public RenderObject
{
public:
    InnerRing();

private:
    inline static const PosColorVertex s_ringVertices[] =
    {
        { 0.000f, 0.080f, 0.860f, 0xff0000f0 },
        { 0.000f, 0.060f, 0.760f, 0xff0000f0 },
        { 0.000f, -0.080f, 0.860f, 0xff0000f0 },
        { 0.000f, -0.060f, 0.760f, 0xff0000f0 },
        { 0.149f, 0.080f, 0.847f, 0xff606060 },
        { 0.132f, 0.060f, 0.748f, 0xff606060 },
        { 0.149f, -0.080f, 0.847f, 0xff606060 },
        { 0.132f, -0.060f, 0.748f, 0xff606060 },
        { 0.294f, 0.080f, 0.808f, 0xff606060 },
        { 0.260f, 0.060f, 0.714f, 0xff606060 },
        { 0.294f, -0.080f, 0.808f, 0xff606060 },
        { 0.260f, -0.060f, 0.714f, 0xff606060 },
        { 0.430f, 0.080f, 0.745f, 0xff606060 },
        { 0.380f, 0.060f, 0.658f, 0xff606060 },
        { 0.430f, -0.080f, 0.745f, 0xff606060 },
        { 0.380f, -0.060f, 0.658f, 0xff606060 },
        { 0.553f, 0.080f, 0.659f, 0xff606060 },
        { 0.489f, 0.060f, 0.582f, 0xff606060 },
        { 0.553f, -0.080f, 0.659f, 0xff606060 },
        { 0.489f, -0.060f, 0.582f, 0xff606060 },
        { 0.659f, 0.080f, 0.553f, 0xff606060 },
        { 0.582f, 0.060f, 0.489f, 0xff606060 },
        { 0.659f, -0.080f, 0.553f, 0xff606060 },
        { 0.582f, -0.060f, 0.489f, 0xff606060 },
        { 0.745f, 0.080f, 0.430f, 0xff606060 },
        { 0.658f, 0.060f, 0.380f, 0xff606060 },
        { 0.745f, -0.080f, 0.430f, 0xff606060 },
        { 0.658f, -0.060f, 0.380f, 0xff606060 },
        { 0.808f, 0.080f, 0.294f, 0xff606060 },
        { 0.714f, 0.060f, 0.260f, 0xff606060 },
        { 0.808f, -0.080f, 0.294f, 0xff606060 },
        { 0.714f, -0.060f, 0.260f, 0xff606060 },
        { 0.847f, 0.080f, 0.149f, 0xff606060 },
        { 0.748f, 0.060f, 0.132f, 0xff606060 },
        { 0.847f, -0.080f, 0.149f, 0xff606060 },
        { 0.748f, -0.060f, 0.132f, 0xff606060 },
        { 0.860f, 0.080f, 0.000f, 0xff606060 },
        { 0.760f, 0.060f, 0.000f, 0xff606060 },
        { 0.860f, -0.080f, 0.000f, 0xff606060 },
        { 0.760f, -0.060f, 0.000f, 0xff606060 },
        { 0.847f, 0.080f, -0.149f, 0xff606060 },
        { 0.748f, 0.060f, -0.132f, 0xff606060 },
        { 0.847f, -0.080f, -0.149f, 0xff606060 },
        { 0.748f, -0.060f, -0.132f, 0xff606060 },
        { 0.808f, 0.080f, -0.294f, 0xff606060 },
        { 0.714f, 0.060f, -0.260f, 0xff606060 },
        { 0.808f, -0.080f, -0.294f, 0xff606060 },
        { 0.714f, -0.060f, -0.260f, 0xff606060 },
        { 0.745f, 0.080f, -0.430f, 0xff606060 },
        { 0.658f, 0.060f, -0.380f, 0xff606060 },
        { 0.745f, -0.080f, -0.430f, 0xff606060 },
        { 0.658f, -0.060f, -0.380f, 0xff606060 },
        { 0.659f, 0.080f, -0.553f, 0xff606060 },
        { 0.582f, 0.060f, -0.489f, 0xff606060 },
        { 0.659f, -0.080f, -0.553f, 0xff606060 },
        { 0.582f, -0.060f, -0.489f, 0xff606060 },
        { 0.553f, 0.080f, -0.659f, 0xff606060 },
        { 0.489f, 0.060f, -0.582f, 0xff606060 },
        { 0.553f, -0.080f, -0.659f, 0xff606060 },
        { 0.489f, -0.060f, -0.582f, 0xff606060 },
        { 0.430f, 0.080f, -0.745f, 0xff606060 },
        { 0.380f, 0.060f, -0.658f, 0xff606060 },
        { 0.430f, -0.080f, -0.745f, 0xff606060 },
        { 0.380f, -0.060f, -0.658f, 0xff606060 },
        { 0.294f, 0.080f, -0.808f, 0xff606060 },
        { 0.260f, 0.060f, -0.714f, 0xff606060 },
        { 0.294f, -0.080f, -0.808f, 0xff606060 },
        { 0.260f, -0.060f, -0.714f, 0xff606060 },
        { 0.149f, 0.080f, -0.847f, 0xff606060 },
        { 0.132f, 0.060f, -0.748f, 0xff606060 },
        { 0.149f, -0.080f, -0.847f, 0xff606060 },
        { 0.132f, -0.060f, -0.748f, 0xff606060 },
        { 0.000f, 0.080f, -0.860f, 0xff606060 },
        { 0.000f, 0.060f, -0.760f, 0xff606060 },
        { 0.000f, -0.080f, -0.860f, 0xff606060 },
        { 0.000f, -0.060f, -0.760f, 0xff606060 },
        { -0.149f, 0.080f, -0.847f, 0xff606060 },
        { -0.132f, 0.060f, -0.748f, 0xff606060 },
        { -0.149f, -0.080f, -0.847f, 0xff606060 },
        { -0.132f, -0.060f, -0.748f, 0xff606060 },
        { -0.294f, 0.080f, -0.808f, 0xff606060 },
        { -0.260f, 0.060f, -0.714f, 0xff606060 },
        { -0.294f, -0.080f, -0.808f, 0xff606060 },
        { -0.260f, -0.060f, -0.714f, 0xff606060 },
        { -0.430f, 0.080f, -0.745f, 0xff606060 },
        { -0.380f, 0.060f, -0.658f, 0xff606060 },
        { -0.430f, -0.080f, -0.745f, 0xff606060 },
        { -0.380f, -0.060f, -0.658f, 0xff606060 },
        { -0.553f, 0.080f, -0.659f, 0xff606060 },
        { -0.489f, 0.060f, -0.582f, 0xff606060 },
        { -0.553f, -0.080f, -0.659f, 0xff606060 },
        { -0.489f, -0.060f, -0.582f, 0xff606060 },
        { -0.659f, 0.080f, -0.553f, 0xff606060 },
        { -0.582f, 0.060f, -0.489f, 0xff606060 },
        { -0.659f, -0.080f, -0.553f, 0xff606060 },
        { -0.582f, -0.060f, -0.489f, 0xff606060 },
        { -0.745f, 0.080f, -0.430f, 0xff606060 },
        { -0.658f, 0.060f, -0.380f, 0xff606060 },
        { -0.745f, -0.080f, -0.430f, 0xff606060 },
        { -0.658f, -0.060f, -0.380f, 0xff606060 },
        { -0.808f, 0.080f, -0.294f, 0xff606060 },
        { -0.714f, 0.060f, -0.260f, 0xff606060 },
        { -0.808f, -0.080f, -0.294f, 0xff606060 },
        { -0.714f, -0.060f, -0.260f, 0xff606060 },
        { -0.847f, 0.080f, -0.149f, 0xff606060 },
        { -0.748f, 0.060f, -0.132f, 0xff606060 },
        { -0.847f, -0.080f, -0.149f, 0xff606060 },
        { -0.748f, -0.060f, -0.132f, 0xff606060 },
        { -0.860f, 0.080f, -0.000f, 0xff606060 },
        { -0.760f, 0.060f, -0.000f, 0xff606060 },
        { -0.860f, -0.080f, -0.000f, 0xff606060 },
        { -0.760f, -0.060f, -0.000f, 0xff606060 },
        { -0.847f, 0.080f, 0.149f, 0xff606060 },
        { -0.748f, 0.060f, 0.132f, 0xff606060 },
        { -0.847f, -0.080f, 0.149f, 0xff606060 },
        { -0.748f, -0.060f, 0.132f, 0xff606060 },
        { -0.808f, 0.080f, 0.294f, 0xff606060 },
        { -0.714f, 0.060f, 0.260f, 0xff606060 },
        { -0.808f, -0.080f, 0.294f, 0xff606060 },
        { -0.714f, -0.060f, 0.260f, 0xff606060 },
        { -0.745f, 0.080f, 0.430f, 0xff606060 },
        { -0.658f, 0.060f, 0.380f, 0xff606060 },
        { -0.745f, -0.080f, 0.430f, 0xff606060 },
        { -0.658f, -0.060f, 0.380f, 0xff606060 },
        { -0.659f, 0.080f, 0.553f, 0xff606060 },
        { -0.582f, 0.060f, 0.489f, 0xff606060 },
        { -0.659f, -0.080f, 0.553f, 0xff606060 },
        { -0.582f, -0.060f, 0.489f, 0xff606060 },
        { -0.553f, 0.080f, 0.659f, 0xff606060 },
        { -0.489f, 0.060f, 0.582f, 0xff606060 },
        { -0.553f, -0.080f, 0.659f, 0xff606060 },
        { -0.489f, -0.060f, 0.582f, 0xff606060 },
        { -0.430f, 0.080f, 0.745f, 0xff606060 },
        { -0.380f, 0.060f, 0.658f, 0xff606060 },
        { -0.430f, -0.080f, 0.745f, 0xff606060 },
        { -0.380f, -0.060f, 0.658f, 0xff606060 },
        { -0.294f, 0.080f, 0.808f, 0xff606060 },
        { -0.260f, 0.060f, 0.714f, 0xff606060 },
        { -0.294f, -0.080f, 0.808f, 0xff606060 },
        { -0.260f, -0.060f, 0.714f, 0xff606060 },
        { -0.149f, 0.080f, 0.847f, 0xff606060 },
        { -0.132f, 0.060f, 0.748f, 0xff606060 },
        { -0.149f, -0.080f, 0.847f, 0xff606060 },
        { -0.132f, -0.060f, 0.748f, 0xff606060 },
    };

    inline static const uint16_t s_ringTriList[] =
    {
        0, 4, 1,
        1, 4, 5,
        2, 3, 6,
        3, 7, 6,
        2, 6, 0,
        0, 6, 4,
        3, 1, 7,
        1, 5, 7,
        4, 8, 5,
        5, 8, 9,
        6, 7, 10,
        7, 11, 10,
        6, 10, 4,
        4, 10, 8,
        7, 5, 11,
        5, 9, 11,
        8, 12, 9,
        9, 12, 13,
        10, 11, 14,
        11, 15, 14,
        10, 14, 8,
        8, 14, 12,
        11, 9, 15,
        9, 13, 15,
        12, 16, 13,
        13, 16, 17,
        14, 15, 18,
        15, 19, 18,
        14, 18, 12,
        12, 18, 16,
        15, 13, 19,
        13, 17, 19,
        16, 20, 17,
        17, 20, 21,
        18, 19, 22,
        19, 23, 22,
        18, 22, 16,
        16, 22, 20,
        19, 17, 23,
        17, 21, 23,
        20, 24, 21,
        21, 24, 25,
        22, 23, 26,
        23, 27, 26,
        22, 26, 20,
        20, 26, 24,
        23, 21, 27,
        21, 25, 27,
        24, 28, 25,
        25, 28, 29,
        26, 27, 30,
        27, 31, 30,
        26, 30, 24,
        24, 30, 28,
        27, 25, 31,
        25, 29, 31,
        28, 32, 29,
        29, 32, 33,
        30, 31, 34,
        31, 35, 34,
        30, 34, 28,
        28, 34, 32,
        31, 29, 35,
        29, 33, 35,
        32, 36, 33,
        33, 36, 37,
        34, 35, 38,
        35, 39, 38,
        34, 38, 32,
        32, 38, 36,
        35, 33, 39,
        33, 37, 39,
        36, 40, 37,
        37, 40, 41,
        38, 39, 42,
        39, 43, 42,
        38, 42, 36,
        36, 42, 40,
        39, 37, 43,
        37, 41, 43,
        40, 44, 41,
        41, 44, 45,
        42, 43, 46,
        43, 47, 46,
        42, 46, 40,
        40, 46, 44,
        43, 41, 47,
        41, 45, 47,
        44, 48, 45,
        45, 48, 49,
        46, 47, 50,
        47, 51, 50,
        46, 50, 44,
        44, 50, 48,
        47, 45, 51,
        45, 49, 51,
        48, 52, 49,
        49, 52, 53,
        50, 51, 54,
        51, 55, 54,
        50, 54, 48,
        48, 54, 52,
        51, 49, 55,
        49, 53, 55,
        52, 56, 53,
        53, 56, 57,
        54, 55, 58,
        55, 59, 58,
        54, 58, 52,
        52, 58, 56,
        55, 53, 59,
        53, 57, 59,
        56, 60, 57,
        57, 60, 61,
        58, 59, 62,
        59, 63, 62,
        58, 62, 56,
        56, 62, 60,
        59, 57, 63,
        57, 61, 63,
        60, 64, 61,
        61, 64, 65,
        62, 63, 66,
        63, 67, 66,
        62, 66, 60,
        60, 66, 64,
        63, 61, 67,
        61, 65, 67,
        64, 68, 65,
        65, 68, 69,
        66, 67, 70,
        67, 71, 70,
        66, 70, 64,
        64, 70, 68,
        67, 65, 71,
        65, 69, 71,
        68, 72, 69,
        69, 72, 73,
        70, 71, 74,
        71, 75, 74,
        70, 74, 68,
        68, 74, 72,
        71, 69, 75,
        69, 73, 75,
        72, 76, 73,
        73, 76, 77,
        74, 75, 78,
        75, 79, 78,
        74, 78, 72,
        72, 78, 76,
        75, 73, 79,
        73, 77, 79,
        76, 80, 77,
        77, 80, 81,
        78, 79, 82,
        79, 83, 82,
        78, 82, 76,
        76, 82, 80,
        79, 77, 83,
        77, 81, 83,
        80, 84, 81,
        81, 84, 85,
        82, 83, 86,
        83, 87, 86,
        82, 86, 80,
        80, 86, 84,
        83, 81, 87,
        81, 85, 87,
        84, 88, 85,
        85, 88, 89,
        86, 87, 90,
        87, 91, 90,
        86, 90, 84,
        84, 90, 88,
        87, 85, 91,
        85, 89, 91,
        88, 92, 89,
        89, 92, 93,
        90, 91, 94,
        91, 95, 94,
        90, 94, 88,
        88, 94, 92,
        91, 89, 95,
        89, 93, 95,
        92, 96, 93,
        93, 96, 97,
        94, 95, 98,
        95, 99, 98,
        94, 98, 92,
        92, 98, 96,
        95, 93, 99,
        93, 97, 99,
        96, 100, 97,
        97, 100, 101,
        98, 99, 102,
        99, 103, 102,
        98, 102, 96,
        96, 102, 100,
        99, 97, 103,
        97, 101, 103,
        100, 104, 101,
        101, 104, 105,
        102, 103, 106,
        103, 107, 106,
        102, 106, 100,
        100, 106, 104,
        103, 101, 107,
        101, 105, 107,
        104, 108, 105,
        105, 108, 109,
        106, 107, 110,
        107, 111, 110,
        106, 110, 104,
        104, 110, 108,
        107, 105, 111,
        105, 109, 111,
        108, 112, 109,
        109, 112, 113,
        110, 111, 114,
        111, 115, 114,
        110, 114, 108,
        108, 114, 112,
        111, 109, 115,
        109, 113, 115,
        112, 116, 113,
        113, 116, 117,
        114, 115, 118,
        115, 119, 118,
        114, 118, 112,
        112, 118, 116,
        115, 113, 119,
        113, 117, 119,
        116, 120, 117,
        117, 120, 121,
        118, 119, 122,
        119, 123, 122,
        118, 122, 116,
        116, 122, 120,
        119, 117, 123,
        117, 121, 123,
        120, 124, 121,
        121, 124, 125,
        122, 123, 126,
        123, 127, 126,
        122, 126, 120,
        120, 126, 124,
        123, 121, 127,
        121, 125, 127,
        124, 128, 125,
        125, 128, 129,
        126, 127, 130,
        127, 131, 130,
        126, 130, 124,
        124, 130, 128,
        127, 125, 131,
        125, 129, 131,
        128, 132, 129,
        129, 132, 133,
        130, 131, 134,
        131, 135, 134,
        130, 134, 128,
        128, 134, 132,
        131, 129, 135,
        129, 133, 135,
        132, 136, 133,
        133, 136, 137,
        134, 135, 138,
        135, 139, 138,
        134, 138, 132,
        132, 138, 136,
        135, 133, 139,
        133, 137, 139,
        136, 140, 137,
        137, 140, 141,
        138, 139, 142,
        139, 143, 142,
        138, 142, 136,
        136, 142, 140,
        139, 137, 143,
        137, 141, 143,
        140, 0, 141,
        141, 0, 1,
        142, 143, 2,
        143, 3, 2,
        142, 2, 140,
        140, 2, 0,
        143, 141, 3,
        141, 1, 3,
    };
};
